Non-Constructible Change

Given an array of positive integers representing the values of coins in your possession, write a function that returns the minimum amount of change (the minimum sum of money) that you cannot create. The given coins can have any positive integer value and aren't necessarily unique (i.e., you can have multiple coins of the same value).
For example, if you're given coins = [1, 2, 5], the minimum amount of change that you can't create is 4. If you're given no
coins, the minimum amount of change that you can't create is 1.

Sample Input
coins = [15, 7, 1, 1, 2, 3, 22]

Sample Output
20


Ex: walk through

# If you keep iterating through the sorted array, you will see a pattern
# you just have to keep adding the previous elements, 
# And If the next element is greater than current change+1, 
# then that means you cannot create change+1, So return change + 1

1,2,3,4,5,6,7

is 1 > 0+1 -> no -> 1 +
is 2 > 1+1 -> no -> 2 +
is 3 > 2+1 -> no -> 3 +
is 4 > 3+1 -> no -> 4 +
is 5 > 4+1 -> no -> 5 +
is 6 > 5+1 -> no -> 6 + 
is 7 > 6+1 -> no -> 7 +
--------------------> end of array, so sum up them all = 28 which can be created, and 29 is the next one that cant be created.


--------------------------------

[5, 6, 1, 1, 2, 3, 4, 9]
sort it 

1,1,2,3,4,5,6,9

is 1 > 0+1 -> no -> 1 +
is 1 > 1+1 -> no -> 2 +
is 2 > 2+1 -> no -> 3 +
is 3 > 3+1 -> no -> 4 +
is 4 > 4+1 -> no -> 5 +
is 5 > 5+1 -> no -> 6 +
is 6 > 6+1 -> no -> 7 +
is 9 > 7+1 -> yes -> break 
-------------------> 